{"version":3,"file":"static/js/922.2685b61d.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/CardListBlock/styles.ts","components/CardListBlock/index.tsx","components/SeminarHighlightBlock/styles.ts","components/SeminarHighlightBlock/index.tsx","pages/Home/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack items on smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  text-align: left;\n\n  @media only screen and (max-width: 768px) {\n    text-align: center; // Center-align text on smaller screens\n    margin-bottom: 2rem; // Add spacing between stacked items\n  }\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n\n  button {\n    margin: 0 auto;\n  }\n\n  @media only screen and (max-width: 768px) {\n    display: none; // Hide the button on screens smaller than 768px\n  }\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  font-size: 50px;\n  margin: 0;\n  font-weight: normal;\n  padding: 0rem 0 2rem;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 30px; // Reduce title size on smaller screens\n  }\n`;\n\n\ninterface PhotoProps {\n    width?: string;\n    height?: string;\n}\n\nexport const CardPhoto = styled.img<PhotoProps>`\n  \n  width: ${({ width }) => width || \"100%\"};  // Default width is 100%, but it can be overridden\n  height: ${({ height }) => height || \"200px\"};  // Default height is 200px, but it can be overridden\n  object-fit: cover;  // Maintain aspect ratio and cover the given area\n  object-position: center;  // Center the image\n  border-radius: 5px;  // Optional: add some border-radius\n`;\n","import { Row, Col, Card } from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport { CardListBlockProps } from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport {\n  ContentSection,\n  ContentWrapper,\n  StyledRow,\n  ButtonWrapper,\n  StyledTitle,\n  CardPhoto,\n} from \"./styles\";\nimport {useHistory} from \"react-router-dom\";\n\nconst { Meta } = Card;\n\nconst CardListBlock = ({\n                         title,\n                         content = [],\n                         button,\n                         t,\n                         id,\n                         fade_direction,\n                       }: CardListBlockProps) => {\n    const history = useHistory();\n\n    return (\n      <ContentSection>\n        <Fade direction={fade_direction} triggerOnce>\n          <div>\n          <StyledRow justify=\"space-between\" align=\"middle\" id={id} direction={\"left\"}>\n            {/* Left Column for the Title */}\n            <Col lg={11} md={12} sm={24} xs={24}>\n              <ContentWrapper>\n                <StyledTitle>{t(title)}</StyledTitle>\n              </ContentWrapper>\n            </Col>\n\n            {/* Right Column for the Button */}\n            <Col lg={4} md={12} sm={24} xs={24}>\n                {button && (\n                    <ButtonWrapper>\n                      <Button key={\"learn_more\"}\n                              onClick={() => history.push(button.link)}\n                      >\n                        {button.title}\n                      </Button>\n                    </ButtonWrapper>\n                )}\n              {/*<ButtonWrapper>*/}\n              {/*  <Button key={\"learn_more\"}>{button?.title}</Button>*/}\n              {/*</ButtonWrapper>*/}\n            </Col>\n          </StyledRow>\n\n          {/* Card Grid */}\n          <StyledRow\n              justify=\"space-between\"\n              align=\"middle\"\n              id={id}\n              direction={\"left\"}\n              gutter={[24, 24]} // Adds spacing between grid items\n          >\n            {content.slice(0, 3).map((item, index) => (\n                <Col\n                    key={index}\n                    lg={8} // 3 cards per row on large screens\n                    md={12} // 2 cards per row on medium screens\n                    sm={24} // 1 card per row on small screens\n                    xs={24} // 1 card per row on extra small screens\n                >\n                  <Card\n                      hoverable\n                      cover={\n                          <CardPhoto\n                              src={\n                                  item.photo\n                                      ? `${process.env.PUBLIC_URL}/img/photo/${item.photo}`\n                                      : `${process.env.PUBLIC_URL}/img/photo/default.jpg` // Fallback image\n                              }\n                              width=\"100%\"\n                              height=\"250px\"\n                              alt={item.title || \"Default Photo\"}\n                          />\n\n                      }\n                  >\n                    <Meta title={item.title} description={item.date} />\n                  </Card>\n                </Col>\n            ))}\n          </StyledRow>\n          </div>\n        </Fade>\n      </ContentSection>\n  );\n};\n\nexport default withTranslation()(CardListBlock);\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack columns vertically for smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  \n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 0px;\n  }\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\nexport const StyledContent = styled(\"p\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n","import {Col, Badge, Card, Tooltip} from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport { SeminarHighlightBlockType } from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport {\n  ContentSection,\n  Content,\n  ContentWrapper,\n  StyledRow,\n  ButtonWrapper, StyledTitle, StyledContent\n} from \"./styles\";\n\nimport {useState} from \"react\";\n\nconst SeminarHighlightBlock = ({\n     title,\n     content = [],\n     instruction,\n     button,\n     t,\n     id,\n     direction,\n     fade_direction,\n}: SeminarHighlightBlockType) => {\n\n\n  const highlight_seminar = content.length > 0 ? content[1] : null;\n    // State to handle abstract toggle\n    const [showFullAbstract, setShowFullAbstract] = useState(false);\n\n    // Function to toggle abstract visibility\n    const toggleAbstract = () => {\n        setShowFullAbstract(!showFullAbstract);\n    };\n\n    // Function to truncate text to the first 100 characters\n    const truncateText = (text: string, limit: number) => {\n        return text.length > limit ? text.substring(0, limit) + \"...\" : text;\n    };\n\n\n\n  return (\n    <ContentSection>\n      <Fade direction={fade_direction}  triggerOnce>\n          <div>\n\n        <StyledRow\n          justify=\"space-between\"\n          align=\"middle\"\n          id={id}\n          direction={direction}\n        >\n          <Col lg={12} md={11} sm={12} xs={24}>\n\n            <ContentWrapper>\n              {highlight_seminar && (\n\n              <Badge.Ribbon text={highlight_seminar.venue}>\n                <Card size=\"small\">\n\n\n                    <StyledTitle style={{ maxWidth: \"90%\" }}>{highlight_seminar.title}</StyledTitle>\n\n\n                    <Tooltip placement=\"right\"   color={\"#18216d\"}  title={highlight_seminar.bio}\n                             overlayStyle={{ maxWidth: \"900px\" }}  // Set the width or maxWidth\n                            showArrow={false}\n                    >                    <StyledContent>\n\n                        {(highlight_seminar.speaker + \" (\" + highlight_seminar.affiliation + \")\")}\n                    </StyledContent>\n\n                </Tooltip>\n                    <StyledContent>\n                        {(highlight_seminar.time + \", \" + highlight_seminar.date)}\n                    </StyledContent>\n\n\n\n                    {highlight_seminar.place && (\n                        <StyledContent>\n                            {(\"Where: \" + highlight_seminar.place)}\n                        </StyledContent>\n                    )}\n\n\n                    <StyledContent>\n                        {showFullAbstract && (\n                            \"Abstract: \" + highlight_seminar.abstract)\n                        }\n                    </StyledContent>\n\n                    <ButtonWrapper>\n\n\n\n                        {highlight_seminar.link && (\n                            <Button\n\n                                onClick={() => window.open(highlight_seminar.link, \"_blank\")}  // Open link in a new tab\n                            >\n                                Join Zoom Meeting\n                            </Button>\n                        )}\n                    </ButtonWrapper>\n\n                </Card>\n              </Badge.Ribbon>\n\n\n\n\n              )}\n            </ContentWrapper>\n\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{(instruction)}</Content>\n            </ContentWrapper>\n\n          </Col>\n        </StyledRow>\n\n          </div>\n\n      </Fade>\n    </ContentSection>\n  );\n};\n\nexport default withTranslation()(SeminarHighlightBlock);\n","import { lazy } from \"react\";\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport HighlightContent from \"../../content/HighlightContent.json\";\r\n\r\nimport CardListBlock from \"../../components/CardListBlock\";\r\nimport SeminarHighlightBlock from \"../../components/SeminarHighlightBlock\";\r\nimport SeminarContent from \"../../content/SeminarContent.json\";\r\n\r\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\n// const ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n\r\n        {/*<ScrollToTop />*/}\r\n      <ContentBlock\r\n        direction=\"right\"\r\n        title={IntroContent.title}\r\n        content={IntroContent.text}\r\n        button={IntroContent.button}\r\n        icon=\"group_1_zoomed.jpg\"\r\n        id=\"home\"\r\n        fade_direction={\"up\"}\r\n      />\r\n\r\n      <CardListBlock\r\n        title={\"Highlights\"}\r\n        content={HighlightContent}\r\n        id=\"highlight\"\r\n        fade_direction={\"up\"}\r\n        button={{ link: \"/news\", title: \"More Highlights\" }}\r\n      />\r\n\r\n\r\n      <SeminarHighlightBlock\r\n        title={\"LTL Seminars\"}\r\n        content={SeminarContent}\r\n        id=\"seminar\"\r\n        direction={\"left\"}\r\n        fade_direction={\"up\"}\r\n        instruction={\"LTL seminars are held every Thursday during term time, either in person at the English Faculty Building or online. Some in-person seminars may also offer a hybrid option for remote participation. We welcome attendees from the University and the wider public.\"}\r\n\r\n      />\r\n\r\n        <MiddleBlock\r\n          title={MiddleBlockContent.title}\r\n          content={MiddleBlockContent.text}\r\n          button={MiddleBlockContent.button}\r\n          url={MiddleBlockContent.url}\r\n        />\r\n\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","ContentSection","StyledRow","_templateObject2","Row","_templateObject3","direction","ContentWrapper","_templateObject4","ButtonWrapper","_templateObject5","StyledTitle","_templateObject6","CardPhoto","img","_templateObject7","_ref2","width","_ref3","height","Meta","Card","withTranslation","title","_ref$content","content","button","t","id","fade_direction","history","useHistory","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","push","link","gutter","slice","map","item","index","hoverable","cover","src","photo","concat","process","alt","description","date","Content","_templateObject8","_templateObject9","StyledContent","_templateObject10","instruction","highlight_seminar","length","_useState","useState","_useState2","_slicedToArray","showFullAbstract","Badge","Ribbon","text","venue","size","style","maxWidth","Tooltip","placement","bio","overlayStyle","showArrow","speaker","affiliation","time","place","abstract","window","open","MiddleBlock","lazy","Container","ContentBlock","IntroContent","icon","CardListBlock","HighlightContent","SeminarHighlightBlock","SeminarContent","MiddleBlockContent","url"],"sourceRoot":""}