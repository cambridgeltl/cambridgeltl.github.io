{"version":3,"file":"static/js/317.88db7161.chunk.js","mappings":"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","sources":["components/PeopleListBlock/styles.ts","components/PeopleListBlock/index.tsx","pages/People/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n// Styled Row\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n          direction === \"left\" ? \"row\" : \"row-reverse\"};\n  display: flex;\n  align-items: center; // Ensure vertical alignment\n  //justify-content: space-between;\n`;\n\n// Content Wrapper (for Title)\nexport const ContentWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center; // Vertically center content\n  height: 100%; // Optional: set to ensure it takes up the full height\n  text-align: left; // Align text to the left\n`;\n\n// Button Wrapper (for Button Alignment)\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%; // Ensure button wrapper takes full height for vertical alignment\n  button {\n    margin: 0 auto;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  font-size: 50px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\n// export const CardPhoto = styled.img`\n//   width: 100%;  // Ensures the image takes full width of the card\n//   height: 200px;  // A fixed height to ensure all images are the same height\n//   object-fit: cover;  // Ensures the image covers the space while maintaining its aspect ratio\n//   object-position: center;  // Ensures the image is centered\n//   border-radius: 5px;  // Optional: add some border-radius for styling\n// `;\n\ninterface PhotoProps {\n    width?: string;\n    height?: string;\n}\n\nexport const CardPhoto = styled.img<PhotoProps>`\n  \n  width: ${({ width }) => width || \"100%\"};  // Default width is 100%, but it can be overridden\n  height: ${({ height }) => height || \"200px\"};  // Default height is 200px, but it can be overridden\n  object-fit: cover;  // Maintain aspect ratio and cover the given area\n  object-position: center;  // Center the image\n  border-radius: 5px;  // Optional: add some border-radius\n`;\n","import {Row, Col, Card, Avatar} from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\n\nimport { PeopleBlockProps } from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport { SvgIcon } from \"../../common/SvgIcon\";\nimport { UserOutlined } from '@ant-design/icons';\n\nimport {\n  ContentSection,\n  ContentWrapper,\n  StyledRow, StyledTitle, CardPhoto,\n} from \"./styles\";\n\n\n\nconst { Meta } = Card;\n\n\nconst PeopleListBlock = ({\n  title,\n  content = [],\n  button,\n  t,\n  id,\n  fade_direction,\n    show_photo = true,\n}: PeopleBlockProps) => {\n\n\n  return (\n    <ContentSection>\n      <Fade direction={fade_direction}  triggerOnce>\n        <div>\n\n          <StyledRow\n              justify=\"space-between\"\n              align=\"middle\"\n              id={id}\n              direction={\"left\"}\n          >\n            {/* Left Column for the Title */}\n            <Col lg={11} md={11} sm={11} xs={24}>\n              <ContentWrapper>\n                <StyledTitle>{t(title)}</StyledTitle>\n              </ContentWrapper>\n            </Col>\n          </StyledRow>\n\n          <StyledRow  id={id}  direction={\"left\"}\n                      style={{ marginTop: \"0px\", marginRight: \"60px\" }}\n\n                      gutter={4}>\n            {content.map((item, index) => (\n                <Col lg={6} md={12} sm={12} xs={24}>\n\n                  <Card\n                      hoverable\n                      style={{\n                        width: 200,\n                        height: show_photo ? 350 : 150,\n                        marginTop : 20,\n                      }}\n                      onClick={item.link ? () => window.open(item.link, '_blank') : undefined}  // Conditionally apply the onClick event\n\n                      // cover={<Photo src={item.photo} width=\"100%\" height=\"100%\" alt={item.title} />}\n                      cover={\n                          show_photo &&\n                          (item.photo ? (\n                              <CardPhoto\n                                  src={`${process.env.PUBLIC_URL}/img/photo/${item.photo}`} // Use PUBLIC_URL for compatibility\n                                  width=\"100%\"\n                                  height=\"200px\"\n                                  alt={item.name} // Use item.name for alt text for better accessibility\n                              />\n                          ) : (\n                              <Avatar\n                                  shape=\"square\"\n                                  size={200}\n                                  icon={<UserOutlined />}\n                                  style={{ width: '100%', height: '200px' }} // Adjust to match the dimensions of the CardPhoto\n                              />\n                          ))\n                      }\n                  >\n                    <Meta\n                        title={\n                          <div style={{ fontWeight: \"bold\", whiteSpace: \"normal\", wordWrap: \"break-word\" }}>\n                            {show_photo ? item.name : (item.title.toLocaleLowerCase() === \"dr\" ? \"Dr \" + item.name : item.name)}\n                          </div>\n                        }\n                        description={item.position}\n                    />\n                  </Card>\n                </Col>\n            ))}\n\n          </StyledRow>\n\n        </div>\n\n\n\n\n\n\n      </Fade>\n    </ContentSection>\n  );\n};\n\nexport default withTranslation()(PeopleListBlock);\n","import { lazy } from \"react\";\nimport IntroContent from \"../../content/IntroContent.json\";\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\nimport PeopleContent from \"../../content/PeopleContent.json\";\nimport CardListBlock from \"../../components/CardListBlock\";\nimport SeminarHighlightBlock from \"../../components/SeminarHighlightBlock\";\nimport SeminarContent from \"../../content/SeminarContent.json\";\nimport PeopleListBlock from \"../../components/PeopleListBlock\";\n\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\nconst Container = lazy(() => import(\"../../common/Container\"));\n// const ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\n\nconst People = () => {\n  return (\n    <Container>\n\n        {/*<ScrollToTop />*/}\n      <ContentBlock\n        direction=\"right\"\n        title={\"People\"}\n        content={\"We are a team of academics, professionals, and students from around the world, working together at the University of Cambridge to tackle critical real-world challenges using cutting-edge technologies in NLP and AI.\"}\n        button={[]}\n        icon=\"ltl_garden_high.jpg\"\n        id=\"home\"\n        fade_direction={\"up\"}\n      />\n\n      <PeopleListBlock\n        title={\"Academic Staff\"}\n        content={PeopleContent.filter((item) => item.type === \"academic staff\")}\n        id=\"staff\"\n        fade_direction={\"up\"}\n      />\n\n        <PeopleListBlock\n            title={\"Affiliated Lecturers\"}\n            content={PeopleContent.filter((item) => item.type === \"affiliated lecturer\")}\n            id=\"affiliated staff\"\n            fade_direction={\"up\"}\n        />\n\n\n        <PeopleListBlock\n            title={\"Researchers\"}\n            content={PeopleContent.filter((item) => item.type === \"researcher\")}\n            id=\"researchers\"\n            fade_direction={\"up\"}\n        />\n\n        <PeopleListBlock\n            title={\"Affiliated Researchers\"}\n            content={PeopleContent.filter((item) => item.type === \"affiliated researcher\")}\n            id=\"affiliated_researchers\"\n            fade_direction={\"up\"}\n        />\n\n        <PeopleListBlock\n            title={\"Research Students\"}\n            content={PeopleContent.filter((item) => item.type === \"student\")}\n            id=\"researchers\"\n            fade_direction={\"up\"}\n        />\n\n        <PeopleListBlock\n            title={\"Visiting ELLIS Students\"}\n            content={PeopleContent.filter((item) => item.type === \"ellis student\")}\n            id=\"ellis student\"\n            fade_direction={\"up\"}\n        />\n\n\n        <PeopleListBlock\n            title={\"Administrators\"}\n            content={PeopleContent.filter((item) => item.type === \"administrator\")}\n            id=\"administrators\"\n            fade_direction={\"up\"}\n        />\n\n        <PeopleListBlock\n            title={\"Alumni\"}\n            content={PeopleContent.filter((item) => item.type === \"alumni\")}\n            id=\"alumni\"\n            fade_direction={\"up\"}\n            show_photo={false}\n        />\n\n\n\n        {/*<M*/}\n\n\n    </Container>\n  );\n};\n\nexport default People;\n"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","StyledRow","_templateObject2","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","StyledTitle","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","CardPhoto","img","_templateObject10","_ref2","width","_ref3","height","Meta","Card","withTranslation","title","_ref$content","content","t","button","id","fade_direction","_ref$show_photo","show_photo","_jsx","children","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","style","marginTop","marginRight","gutter","map","item","index","hoverable","onClick","link","window","open","undefined","cover","photo","src","concat","process","alt","name","Avatar","shape","size","icon","UserOutlined","fontWeight","whiteSpace","wordWrap","toLocaleLowerCase","description","position","Container","lazy","ContentBlock","PeopleListBlock","PeopleContent","filter","type"],"sourceRoot":""}