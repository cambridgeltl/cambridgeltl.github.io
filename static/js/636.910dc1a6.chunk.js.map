{"version":3,"file":"static/js/636.910dc1a6.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/NextSeminarBlock/styles.ts","components/NextSeminarBlock/index.tsx","components/SeminarListBlock/styles.ts","components/SeminarCardBlock/styles.ts","components/SeminarCardBlock/index.tsx","components/SeminarListBlock/index.tsx","pages/Seminar/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack columns vertically for smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  \n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 0px;\n  }\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\nexport const StyledContent = styled(\"p\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\nexport const StyledAbstract = styled(\"p\")`\n  font-size: 18px; // Adjust this value to match the button size\n  color: #000;\n\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\nexport const StyledUnderline = styled(\"u\")`\n  color: #000;\n\n  font-size: 18px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n","import {Col, Badge, Card, Tooltip} from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport { SeminarNextBlockType } from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport {\n    ContentSection,\n    Content,\n    ContentWrapper,\n    StyledRow,\n    ButtonWrapper, StyledTitle, StyledContent, StyledUnderline, StyledAbstract\n} from \"./styles\";\n\nimport {useState} from \"react\";\n\nconst SeminarNextBlock = ({\n     title,\n     content,\n     instruction,\n     button,\n     t,\n     id,\n     direction,\n     fade_direction,\n}: SeminarNextBlockType) => {\n\n\n    // State to handle abstract toggle\n    const [showFullAbstract, setShowFullAbstract] = useState(false);\n\n    // Function to toggle abstract visibility\n    const toggleAbstract = () => {\n        setShowFullAbstract(!showFullAbstract);\n    };\n\n    // Function to truncate text to the first 100 characters\n    const truncateText = (text: string, limit: number) => {\n        return text.length > limit ? text.substring(0, limit) + \"...\" : text;\n    };\n\n\n\n  return (\n    <ContentSection>\n      <Fade direction={fade_direction}  triggerOnce>\n          <div>\n\n        <StyledRow\n          justify=\"space-between\"\n          align=\"middle\"\n          id={id}\n          direction={direction}\n        >\n          <Col lg={12} md={11} sm={12} xs={24}>\n\n            <ContentWrapper>\n\n              <Badge.Ribbon text={content.venue}>\n                <Card size=\"small\">\n\n\n                    <StyledTitle style={{ maxWidth: \"90%\" }}>{content.title}</StyledTitle>\n\n\n                    <Tooltip placement=\"right\"   color={\"#18216d\"}  title={content.bio}\n                             overlayStyle={{ maxWidth: \"900px\" }}  // Set the width or maxWidth\n                            showArrow={false}\n                    >\n                        <StyledContent>\n\n                    {(content.speaker + \" (\" + content.affiliation + \")\")}\n                    </StyledContent>\n                </Tooltip>\n                    <StyledContent>\n                        {(content.time + \", \" + content.date)}\n                    </StyledContent>\n\n\n\n                    {content.place && (\n                        <StyledContent>\n                            {(content.place)}\n                        </StyledContent>\n                    )}\n                    <br/>\n                    {!showFullAbstract && (\n                        <div>\n                            <StyledAbstract>\n                                {\"Abstract: \" + truncateText(content.abstract, 200)}\n                            </StyledAbstract>\n                            <StyledUnderline onClick={() =>  toggleAbstract()}>{\"Find more...\"}</StyledUnderline>\n                        </div>\n                        )\n                    }\n                    <StyledAbstract>\n                        {showFullAbstract && (\n                            \"Abstract: \" + content.abstract)\n                        }\n                    </StyledAbstract>\n\n                    <ButtonWrapper>\n\n\n\n                        {content.link && (\n                            <Button\n\n                                onClick={() => window.open(content.link, \"_blank\")}  // Open link in a new tab\n                            >\n                                Join Zoom Meeting\n                            </Button>\n                        )}\n                    </ButtonWrapper>\n\n                </Card>\n              </Badge.Ribbon>\n\n\n\n\n\n            </ContentWrapper>\n\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{(instruction)}</Content>\n            </ContentWrapper>\n\n          </Col>\n        </StyledRow>\n\n          </div>\n\n      </Fade>\n    </ContentSection>\n  );\n};\n\nexport default withTranslation()(SeminarNextBlock);\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack columns vertically for smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  \n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 0px;\n  }\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  padding: 0rem 0 2rem;\n  //font-size: 30px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\nexport const StyledContent = styled(\"p\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\n\nexport const StyledSmallTitle = styled(\"h6\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n//\n// export const StyledContent = styled(\"p\")`\n//   font-size: 20px; // Adjust this value to match the button size\n//   margin: 0;\n//   font-weight: normal; // Adjust if needed to match the button\n// `;\n\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack columns vertically for smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  \n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 0px;\n  }\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\nexport const StyledContent = styled(\"p\")`\n  \n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\nexport const StyledAbstract = styled(\"p\")`\n  font-size: 18px; // Adjust this value to match the button size\n  color: #000;\n\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\nexport const StyledUnderline = styled(\"u\")`\n  color: #000;\n\n  font-size: 18px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n","import {Col, Badge, Card, Tooltip} from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport {SeminarCardBlockType} from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport { message } from \"antd\";\n\nimport {\n    ContentSection,\n    Content,\n    ContentWrapper,\n    StyledRow,\n    ButtonWrapper, StyledTitle, StyledContent, StyledUnderline, StyledAbstract\n} from \"./styles\";\n\nimport {useState} from \"react\";\n\nconst SeminarCardBlock = ({\n     content,\n     show_detail = true,\n}: SeminarCardBlockType) => {\n    const [showFullAbstract, setShowFullAbstract] = useState(false);\n\n    const toggleAbstract = () => {\n        setShowFullAbstract(!showFullAbstract);\n    };\n\n    const truncateText = (text: string, limit: number) => {\n        return text.length > limit ? text.substring(0, limit) + \"...\" : text;\n    };\n\n    const copyToClipboard = (text: string) => {\n        navigator.clipboard.writeText(text)\n            .then(() => {\n                message.success(\"Copied Meeting Link to Clipboard!\");\n            })\n            .catch(() => {\n                message.error(\"Failed to Copy!\");\n            });\n    };\n\n    return (\n\n        <Badge.Ribbon text={content.venue}>\n            <Card size=\"small\">\n\n                <StyledTitle style={{maxWidth: \"90%\"}}>{content.title}</StyledTitle>\n\n\n                <Tooltip placement=\"right\" color={\"#18216d\"} title={content.bio}\n                         overlayStyle={{maxWidth: \"900px\"}}  // Set the width or maxWidth\n                         showArrow={false}\n                >\n                    <StyledContent>\n\n                        {(content.speaker + \" (\" + content.affiliation + \")\")}\n                    </StyledContent>\n                </Tooltip>\n                <StyledContent>\n                    {(content.time + \", \" + content.date)}\n                </StyledContent>\n\n\n                {content.place && show_detail && (\n                    <div>\n                        <StyledContent>\n                            {(content.place)}\n                        </StyledContent>\n                    </div>\n\n                )}\n                {content.link && show_detail && (\n                    <div>\n                        <StyledAbstract>\n                            <a onClick={() => copyToClipboard(content.link)} style={{ cursor: \"pointer\", color: \"#18216d\", textDecoration: \"underline\" }}>\n                                Copy Link\n                            </a>\n                        </StyledAbstract>\n                    </div>\n                )}\n                <br/>\n                {!showFullAbstract && show_detail && (\n                    <div>\n                        <StyledAbstract>\n                            {\"Abstract: \" + truncateText(content.abstract, 200)}\n                        </StyledAbstract>\n                        <StyledUnderline onClick={() => toggleAbstract()}>{\"Find more...\"}</StyledUnderline>\n                    </div>\n                )\n                }\n                <StyledAbstract>\n                    {showFullAbstract && show_detail && (\n                        \"Abstract: \" + content.abstract)\n                    }\n                </StyledAbstract>\n            </Card>\n        </Badge.Ribbon>\n\n    );\n};\n\nexport default withTranslation()(SeminarCardBlock);\n","import {Col, Badge, Card, Tooltip} from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport { SeminarListBlockType } from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport {\n    ContentSection,\n    Content,\n    ContentWrapper,\n    StyledRow,\n    ButtonWrapper, StyledTitle, StyledContent, StyledSmallTitle\n} from \"./styles\";\n\nimport {useState} from \"react\";\nimport SeminarCardBlock from \"../SeminarCardBlock\";\nimport {StyledAbstract, StyledUnderline} from \"../SeminarCardBlock/styles\";\n\nconst SeminarListBlock = ({\n                              upcoming_talks = [], completed_talks = [],\n     t,\n     id,\n     direction,\n     fade_direction,\n}: SeminarListBlockType) => {\n\n\n  return (\n    <ContentSection>\n      <Fade direction={fade_direction}  triggerOnce>\n          <div>\n\n        <StyledRow\n            // align=\"top\"\n          justify=\"space-between\"\n          align=\"top\"\n          id={id}\n          direction={direction}\n        >\n\n          <Col lg={12} md={12} sm={12} xs={24}>\n            <StyledTitle>{t(\"Upcoming Talks\")}</StyledTitle>\n          {upcoming_talks.length > 0 && upcoming_talks.map((talk, index) => (\n              <ContentWrapper\n                  style={{marginBottom: \"20px\"}}\n              >\n\n                  <SeminarCardBlock\n                      content={talk}\n                      show_detail={true}\n                  />\n              </ContentWrapper>\n          ))}\n          </Col>\n            <Col lg={11} md={11} sm={11} xs={24}>\n                <ContentWrapper>\n                    <StyledTitle>{\"Previous Talks\"}</StyledTitle>\n                    {upcoming_talks.length > 0 && upcoming_talks.map((talk, index) => (\n                        <ContentWrapper\n                            style={{marginBottom: \"20px\"}}\n                        >\n\n                            <Card size=\"small\">\n\n                                <StyledSmallTitle style={{maxWidth: \"90%\"}}>{talk.title}</StyledSmallTitle>\n\n\n                                <Tooltip placement=\"right\" color={\"#18216d\"} title={talk.bio}\n                                         overlayStyle={{maxWidth: \"900px\"}}\n                                         showArrow={false}\n                                >\n                                    <StyledContent>\n\n                                        {(talk.speaker + \" (\" + talk.affiliation + \")\")}\n                                    </StyledContent>\n                                </Tooltip>\n                                <StyledContent>\n                                    {(talk.date)}\n                                </StyledContent>\n\n                            </Card>\n                        </ContentWrapper>\n                    ))}\n                </ContentWrapper>\n            </Col>\n        </StyledRow>\n\n          </div>\n\n      </Fade>\n    </ContentSection>\n  );\n};\n\nexport default withTranslation()(SeminarListBlock);\n","import { lazy } from \"react\";\nimport IntroContent from \"../../content/IntroContent.json\";\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\nimport PeopleContent from \"../../content/PeopleContent.json\";\nimport CardListBlock from \"../../components/CardListBlock\";\nimport SeminarHighlightBlock from \"../../components/SeminarHighlightBlock\";\nimport SeminarContent from \"../../content/SeminarContent.json\";\nimport PeopleListBlock from \"../../components/PeopleListBlock\";\nimport SeminarNextBlock from \"../../components/NextSeminarBlock\";\nimport SeminarListBlock from \"../../components/SeminarListBlock\";\nimport SeminarCardBlock from \"../../components/SeminarCardBlock\";\n\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\nconst Container = lazy(() => import(\"../../common/Container\"));\n// const ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\n\nconst Seminar = () => {\n    const next_seminar = SeminarContent.length > 0 ? SeminarContent[1] : null;\n\n\n    return (\n    <Container>\n\n      <ContentBlock\n        direction=\"right\"\n        title={\"Seminars\"}\n        content={\"LTL seminars are held every Thursday during term time, either in person at the English Faculty Building or online. Some in-person seminars may also offer a hybrid option for remote participation. We welcome attendees from the University and the wider public.\"}\n        button={[\n        ]}\n        icon=\"LTL-seminar-2.jpeg\"\n        id=\"home\"\n        fade_direction={\"up\"}\n      />\n\n        {next_seminar && (\n            <SeminarNextBlock\n                title={\"Next Talk\"}\n                content={next_seminar}\n                id=\"seminar\"\n                instruction={\"Our seminars are held every Thursday from 11:00 AM to 12:00 PM during term time (unless otherwise specified). For more information about our talks, please visit our talks.cam page (talks.cam.ac.uk/show/index/60438).\"}\n                direction={\"left\"}\n                fade_direction={\"up\"}\n\n            />\n        )}\n\n\n        <SeminarListBlock\n            upcoming_talks={SeminarContent}\n            completed_talks={SeminarContent}\n            id=\"seminar_list\"\n            direction={\"left\"}\n            fade_direction={\"up\"}\n        />\n\n    </Container>\n  );\n};\n\nexport default Seminar;\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","ContentSection","Content","_templateObject2","StyledRow","Row","_templateObject3","direction","ContentWrapper","_templateObject4","ButtonWrapper","_templateObject5","_templateObject6","_templateObject7","_templateObject8","StyledTitle","_templateObject9","StyledContent","_templateObject10","StyledAbstract","_templateObject11","StyledUnderline","_templateObject12","withTranslation","text","limit","title","content","instruction","t","button","id","fade_direction","_useState","useState","_useState2","_slicedToArray","showFullAbstract","setShowFullAbstract","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","Badge","Ribbon","venue","Card","size","style","maxWidth","Tooltip","placement","bio","overlayStyle","showArrow","speaker","affiliation","time","date","place","abstract","length","substring","link","window","open","StyledSmallTitle","_ref$show_detail","show_detail","navigator","clipboard","writeText","then","message","success","catch","error","cursor","textDecoration","_ref$upcoming_talks","upcoming_talks","completed_talks","map","talk","index","marginBottom","SeminarCardBlock","Container","lazy","ContentBlock","next_seminar","SeminarContent","icon","SeminarNextBlock","SeminarListBlock"],"sourceRoot":""}