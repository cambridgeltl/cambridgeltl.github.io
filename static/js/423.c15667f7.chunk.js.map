{"version":3,"file":"static/js/423.c15667f7.chunk.js","mappings":"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","sources":["common/Photo/index.tsx","components/StudentProjectBlock/styles.ts","components/StudentProjectCategoryBlock/styles.ts","components/StudentProjectCategoryBlock/index.tsx","components/StudentProjectBlock/index.tsx"],"sourcesContent":["import { ImageProps } from \"../types\";\n\n\n\nexport const Photo = ({ src, width, height, alt }: ImageProps) => (\n    <img\n        src={`${process.env.PUBLIC_URL}/img/photo/${src}`}\n        alt={alt || src}\n        width={width}\n        height={height}\n        style={{ maxWidth: \"100%\", height: \"auto\" }}\n        onError={(e) => {\n            e.currentTarget.src = `${process.env.PUBLIC_URL}/img/photo/fallback.png`;\n            e.currentTarget.alt = \"Image not found\";\n        }}\n    />\n\n);","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 4rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const StyledRow = styled(Row)`\n  flex-direction: ${({ direction }: { direction: string }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\nimport {CSSProperties} from \"react\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 2rem 0 2rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 2rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack items on smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  text-align: left;\n\n  @media only screen and (max-width: 768px) {\n    text-align: center; // Center-align text on smaller screens\n    margin-bottom: 2rem; // Add spacing between stacked items\n  }\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n\n  button {\n    margin: 0 auto;\n  }\n\n  @media only screen and (max-width: 768px) {\n    display: none; // Hide the button on screens smaller than 768px\n  }\n`;\n\n\n\nexport const StyledContent = styled(\"p\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\nexport const cardStyle: CSSProperties = {\n    height: \"220px\",\n};\n\n\nexport const StyledTitle = styled(\"h6\")`\n  font-size: 20px;\n  margin: 0;\n  font-weight: normal;\n  padding: 1rem 0 0rem;\n\n\n  @media only screen and (max-width: 768px) {\n    font-size: 20px; // Reduce title size on smaller screens\n  }\n`;\n\n\ninterface PhotoProps {\n    width?: string;\n    height?: string;\n}\n\nexport const CardPhoto = styled.img<PhotoProps>`\n  \n  width: ${({ width }) => width || \"100%\"};  // Default width is 100%, but it can be overridden\n  height: ${({ height }) => height || \"200px\"};  // Default height is 200px, but it can be overridden\n  object-fit: cover;  // Maintain aspect ratio and cover the given area\n  object-position: center;  // Center the image\n  border-radius: 5px;  // Optional: add some border-radius\n`;\n","import { Badge, Col, Card } from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport {\n    ContentSection, StyledContent,\n    StyledRow, StyledTitle,\n} from \"./styles\";\nimport {cardStyle} from \"./styles\";\n\nconst { Meta } = Card;\n\nconst StudentProjectCategoryBlock = () => {\n  return (\n      <ContentSection>\n        <Fade direction={\"up\"} triggerOnce>\n          <div>\n          <StyledRow\n              justify=\"space-between\"\n              align=\"middle\"\n              id={\"student_project_category\"}\n              direction={\"left\"}\n              gutter={[24, 24]}\n          >\n                <Col\n                    key={\"category_a\"} lg={8} md={12} sm={24} xs={24}\n                >\n                    <Badge.Ribbon text={\"A. Machine Learning\"} placement={\"start\"}>\n\n                    <Card\n                      hoverable\n                      style={cardStyle}\n\n                    >\n                      <StyledTitle>{\"A. Machine Learning for NLP\"}</StyledTitle>\n                      <StyledContent>{\"For students with a background in computer science, engineering, or quantitative disciplines. Strong programming skills are essential.\"}</StyledContent>\n                  </Card>\n                        </Badge.Ribbon>\n                </Col>\n\n              <Col\n                  key={\"category_b\"} lg={8} md={12} sm={24} xs={24}\n              >\n                  <Badge.Ribbon text={\"B. Computational Linguistics\"} placement={\"start\"} color=\"cyan\">\n\n                  <Card\n                      hoverable\n\n                      style={cardStyle}\n\n                  >\n                      <StyledTitle>{\"B. Computational Linguistics\"}</StyledTitle>\n                      <StyledContent>{\"For students from linguistics or non-science backgrounds with strong programming skills (e.g., Python).\"}</StyledContent>\n                  </Card>\n                  </Badge.Ribbon>\n\n              </Col>\n\n              <Col\n                  key={\"category_c\"} lg={8} md={12} sm={24} xs={24}\n              >\n                  <Badge.Ribbon text={\"C. Data-Driven Linguistics\"} placement={\"start\"} color=\"green\">\n\n                  <Card\n                      hoverable\n                      style={cardStyle}\n\n                  >\n                      <StyledTitle>{\"C. Data-Driven Linguistics\"}</StyledTitle>\n                      <StyledContent>{\"For linguistics students with a foundation in quantitative methods focused on leveraging corpora and data for linguistic insights.\"}</StyledContent>\n                  </Card>\n                  </Badge.Ribbon>\n\n              </Col>\n\n\n          </StyledRow>\n          </div>\n        </Fade>\n      </ContentSection>\n  );\n};\n\nexport default withTranslation()(StudentProjectCategoryBlock);\n","import { Row, Col } from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { StudentProjectBlockProps } from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport { SvgIcon } from \"../../common/SvgIcon\";\nimport {\n  ContentSection,\n  Content,\n  ContentWrapper,\n  ServiceWrapper,\n  MinTitle,\n  MinPara,\n  StyledRow,\n  ButtonWrapper,\n} from \"./styles\";\nimport {Photo} from \"../../common/Photo\";\nimport StudentProjectCategoryBlock from \"../StudentProjectCategoryBlock\";\n\nconst StudentProjectBlock = ({\n  icon,\n  title,\n  content,\n  section,\n  button,\n  t,\n  id,\n  direction, fade_direction\n}: StudentProjectBlockProps) => {\n\n  const history = useHistory();\n\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <ContentSection>\n      <Fade direction={fade_direction}  triggerOnce>\n        <StyledRow\n          justify=\"space-between\"\n          align=\"middle\"\n          id={id}\n          direction={direction}\n        >\n          <Col lg={12} md={11} sm={12} xs={24}>\n            <Photo src={icon} width=\"100%\" height=\"100%\" alt={\"LTL Group\"}/>\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n            </ContentWrapper>\n            \n          </Col>\n\n          <StudentProjectCategoryBlock/>\n\n        </StyledRow>\n      </Fade>\n    </ContentSection>\n  );\n};\n\nexport default withTranslation()(StudentProjectBlock);\n"],"names":["Photo","_ref","src","width","height","alt","_jsx","concat","process","style","maxWidth","onError","e","currentTarget","ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","direction","ContentWrapper","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","StyledContent","cardStyle","StyledTitle","img","_ref2","_ref3","Card","Meta","withTranslation","children","Fade","triggerOnce","_jsxs","justify","align","id","gutter","Col","lg","md","sm","xs","Badge","Ribbon","text","placement","hoverable","color","icon","title","content","t","section","button","fade_direction","useHistory","StudentProjectCategoryBlock"],"sourceRoot":""}