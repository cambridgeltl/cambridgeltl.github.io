{"version":3,"file":"static/js/481.ad3e5079.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","common/utils/useForm.tsx","common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","common/TextArea/index.tsx","components/ContactForm/styles.ts","components/ContactForm/index.tsx","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleFilled.js","../node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/CloseCircleFilled.js","../node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleFilled.js","../node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/LoadingOutlined.js","../node_modules/@ant-design/icons/es/icons/LoadingOutlined.js","../node_modules/antd/es/config-provider/SizeContext.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\n\r\ninterface IValues {\r\n  name: string;\r\n  email: string;\r\n  message: string;\r\n}\r\n\r\nconst initialValues: IValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n};\r\n\r\nexport const useForm = (validate: { (values: IValues): IValues }) => {\r\n  const [formState, setFormState] = useState<{\r\n    values: IValues;\r\n    errors: IValues;\r\n  }>({\r\n    values: { ...initialValues },\r\n    errors: { ...initialValues },\r\n  });\r\n\r\n  const handleSubmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    const url = \"\"; // Fill in your API URL here\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        const response = await fetch(url, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(values),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          notification[\"error\"]({\r\n            message: \"Error\",\r\n            description:\r\n              \"There was an error sending your message, please try again later.\",\r\n          });\r\n        } else {\r\n          event.target.reset();\r\n          setFormState(() => ({\r\n            values: { ...initialValues },\r\n            errors: { ...initialValues },\r\n          }));\r\n\r\n          notification[\"success\"]({\r\n            message: \"Success\",\r\n            description: \"Your message has been sent!\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit form. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.persist();\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n","import { validateProps } from \"../../common/types\";\r\n\r\nexport default function validate(values: validateProps) {\r\n  let errors = {} as validateProps;\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n  if (!values.message) {\r\n    errors.message = \"Message is required\";\r\n  }\r\n  return errors;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: TFunction;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(name)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { StyledTextArea, StyledContainer, Label } from \"./styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst TextArea = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <StyledContainer>\r\n    <Label htmlFor={name}>{t(name)}</Label>\r\n    <StyledTextArea\r\n      placeholder={t(placeholder)}\r\n      id={name}\r\n      name={name}\r\n      onChange={onChange}\r\n    />\r\n  </StyledContainer>\r\n);\r\n\r\nexport default withTranslation()(TextArea);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport { ContactProps, ValidationTypeProps } from \"./types\";\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport { Button } from \"../../common/Button\";\r\nimport Block from \"../Block\";\r\nimport Input from \"../../common/Input\";\r\nimport TextArea from \"../../common/TextArea\";\r\nimport { ContactContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\r\n\r\nconst Contact = ({ title, content, id, t }: ContactProps) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(validate);\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type as keyof typeof errors];\r\n    return <Span>{ErrorMessage}</Span>;\r\n  };\r\n\r\n  return (\r\n    <ContactContainer id={id}>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col lg={12} md={11} sm={24} xs={24}>\r\n          <Slide direction=\"left\" triggerOnce>\r\n            <Block title={title} content={content} />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Slide direction=\"right\" triggerOnce>\r\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Your Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"name\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Your Email\"\r\n                  value={values.email || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"email\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <TextArea\r\n                  placeholder=\"Your Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              <ButtonContainer>\r\n                <Button name=\"submit\">{t(\"Submit\")}</Button>\r\n              </ButtonContainer>\r\n            </FormGroup>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Contact);\r\n","// This icon file is generated automatically.\nvar CheckCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-circle\", \"theme\": \"filled\" };\nexport default CheckCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CheckCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckCircleFilled = function CheckCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\nCheckCircleFilled.displayName = 'CheckCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleFilled);","// This icon file is generated automatically.\nvar CloseCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"fill-rule\": \"evenodd\", \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm127.98 274.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z\" } }] }, \"name\": \"close-circle\", \"theme\": \"filled\" };\nexport default CloseCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CloseCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseCircleFilled = function CloseCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseCircleFilledSvg\n  }));\n};\nCloseCircleFilled.displayName = 'CloseCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleFilled);","// This icon file is generated automatically.\nvar ExclamationCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"filled\" };\nexport default ExclamationCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar ExclamationCircleFilled = function ExclamationCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExclamationCircleFilledSvg\n  }));\n};\nExclamationCircleFilled.displayName = 'ExclamationCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleFilled);","// This icon file is generated automatically.\nvar LoadingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\" } }] }, \"name\": \"loading\", \"theme\": \"outlined\" };\nexport default LoadingOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LoadingOutlinedSvg from \"@ant-design/icons-svg/es/asn/LoadingOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar LoadingOutlined = function LoadingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LoadingOutlinedSvg\n  }));\n};\nLoadingOutlined.displayName = 'LoadingOutlined';\nexport default /*#__PURE__*/React.forwardRef(LoadingOutlined);","import * as React from 'react';\nvar SizeContext = /*#__PURE__*/React.createContext(undefined);\nexport var SizeContextProvider = function SizeContextProvider(_ref) {\n  var children = _ref.children,\n    size = _ref.size;\n  return /*#__PURE__*/React.createElement(SizeContext.Consumer, null, function (originSize) {\n    return /*#__PURE__*/React.createElement(SizeContext.Provider, {\n      value: size || originSize\n    }, children);\n  });\n};\nexport default SizeContext;"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","initialValues","name","email","message","validate","values","errors","test","Content","Container","_templateObject2","TextWrapper","_templateObject3","withTranslation","title","content","t","_jsxs","StyledInput","StyledContainer","StyledTextArea","Label","placeholder","onChange","htmlFor","id","ContactContainer","FormGroup","Span","ButtonContainer","_templateObject4","_useForm","_useState","useState","_objectSpread","_useState2","_slicedToArray","formState","setFormState","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","prevState","Object","every","error","fetch","method","headers","body","JSON","stringify","sent","ok","target","reset","notification","description","t0","stop","_x","apply","arguments","handleChange","persist","_event$target","value","_defineProperty","useForm","ValidationType","_ref2","type","ErrorMessage","Row","justify","align","Col","lg","md","sm","xs","Slide","direction","triggerOnce","Block","autoComplete","onSubmit","span","Input","TextArea","CheckCircleFilled","props","ref","React","AntdIcon","icon","CheckCircleFilledSvg","displayName","CloseCircleFilled","CloseCircleFilledSvg","ExclamationCircleFilled","ExclamationCircleFilledSvg","LoadingOutlined","LoadingOutlinedSvg","SizeContext","undefined","SizeContextProvider","size","Consumer","originSize","Provider"],"sourceRoot":""}