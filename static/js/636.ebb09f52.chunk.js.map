{"version":3,"file":"static/js/636.ebb09f52.chunk.js","mappings":"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","sources":["components/NextSeminarBlock/styles.ts","components/NextSeminarBlock/index.tsx","components/SeminarListBlock/styles.ts","components/SeminarCardBlock/styles.ts","components/SeminarCardBlock/index.tsx","components/SeminarListBlock/index.tsx","pages/Seminar/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack columns vertically for smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  \n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 0px;\n  }\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\nexport const StyledContent = styled(\"p\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\nexport const StyledAbstract = styled(\"p\")`\n  font-size: 18px; // Adjust this value to match the button size\n  color: #000;\n\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\nexport const StyledUnderline = styled(\"u\")`\n  color: #000;\n\n  font-size: 18px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n","import { Col, Badge, Card, Tooltip, Result } from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport { SeminarNextBlockType } from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport {\n    ContentSection,\n    Content,\n    ContentWrapper,\n    StyledRow,\n    ButtonWrapper,\n    StyledTitle,\n    StyledContent,\n    StyledUnderline,\n    StyledAbstract,\n} from \"./styles\";\n\nimport { SmileOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\n\nconst SeminarNextBlock = ({\n                              title,\n                              content,\n                              instruction,\n                              button,\n                              t,\n                              id,\n                              direction,\n                              fade_direction,\n                          }: SeminarNextBlockType) => {\n    // State to handle abstract toggle\n    const [showFullAbstract, setShowFullAbstract] = useState(false);\n\n    // Function to toggle abstract visibility\n    const toggleAbstract = () => {\n        setShowFullAbstract(!showFullAbstract);\n    };\n\n    // Function to truncate text to the first 100 characters\n    const truncateText = (text: string, limit: number) => {\n        return text.length > limit ? text.substring(0, limit) + \"...\" : text;\n    };\n\n    return (\n        <ContentSection>\n            <Fade direction={fade_direction} triggerOnce>\n                <div>\n                    <StyledRow\n                        justify=\"space-between\"\n                        align=\"middle\"\n                        id={id}\n                        direction={direction}\n                    >\n                        <Col lg={12} md={11} sm={12} xs={24}>\n                            {content ? (\n                                <ContentWrapper>\n                                    <Badge.Ribbon text={content.venue}>\n                                        <Card size=\"small\">\n                                            <StyledTitle style={{ maxWidth: \"90%\" }}>\n                                                {content.title}\n                                            </StyledTitle>\n\n                                            <Tooltip\n                                                placement=\"right\"\n                                                color={\"#18216d\"}\n                                                title={content.bio}\n                                                overlayStyle={{ maxWidth: \"900px\" }}\n                                                showArrow={false}\n                                            >\n                                                <StyledContent>\n                                                    {content.affiliation\n                                                        ? `${content.speaker} (${content.affiliation})`\n                                                        : content.speaker}\n                                                </StyledContent>\n                                            </Tooltip>\n                                            <StyledContent>\n                                                {content.time + \", \" + content.date}\n                                            </StyledContent>\n\n                                            {content.place && (\n                                                <StyledContent>{content.place}</StyledContent>\n                                            )}\n                                            <br />\n                                            {!showFullAbstract && (\n                                                <div>\n                                                    <StyledAbstract>\n                                                        {\"Abstract: \" + truncateText(content.abstract, 200)}\n                                                    </StyledAbstract>\n                                                    <StyledUnderline onClick={toggleAbstract}>\n                                                        {\"Find more...\"}\n                                                    </StyledUnderline>\n                                                </div>\n                                            )}\n                                            {showFullAbstract && (\n                                                <StyledAbstract>\n                                                    {\"Abstract: \" + content.abstract}\n                                                </StyledAbstract>\n                                            )}\n\n                                            <ButtonWrapper>\n                                                {content.link && (\n                                                    <Button\n                                                        onClick={() =>\n                                                            window.open(content.link, \"_blank\")\n                                                        }\n                                                    >\n                                                        Join Zoom Meeting\n                                                    </Button>\n                                                )}\n                                            </ButtonWrapper>\n                                        </Card>\n                                    </Badge.Ribbon>\n                                </ContentWrapper>\n                            ) : (\n                                <ContentWrapper>\n                                    <Result\n                                        icon={<LoadingOutlined style={{ color: \"#18216d\"}} />}\n                                        title={\n                                            <span style={{ color: \"#18216d\" }}>\n                                              More exciting talks coming at the start of the next term!\n                                            </span>\n                                        }\n\n                                    />\n                                </ContentWrapper>\n\n                            )}\n                        </Col>\n                        <Col lg={11} md={11} sm={11} xs={24}>\n                            <ContentWrapper>\n                                <h6>{t(title)}</h6>\n                                <Content>{instruction}</Content>\n                            </ContentWrapper>\n                        </Col>\n                    </StyledRow>\n                </div>\n            </Fade>\n        </ContentSection>\n    );\n};\n\nexport default withTranslation()(SeminarNextBlock);\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack columns vertically for smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  \n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 0px;\n  }\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  padding: 0rem 0 2rem;\n  //font-size: 30px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\nexport const StyledContent = styled(\"p\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\n\nexport const StyledSmallTitle = styled(\"h6\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n//\n// export const StyledContent = styled(\"p\")`\n//   font-size: 20px; // Adjust this value to match the button size\n//   margin: 0;\n//   font-weight: normal; // Adjust if needed to match the button\n// `;\n\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 4rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\n\nexport const StyledRow = styled(Row)<{ direction: string }>`\n  flex-direction: ${({ direction }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column; // Stack columns vertically for smaller screens\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  \n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 0px;\n  }\n`;\n\n\nexport const StyledTitle = styled(\"h6\")`\n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\n\nexport const StyledContent = styled(\"p\")`\n  \n  font-size: 20px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\nexport const StyledAbstract = styled(\"p\")`\n  font-size: 18px; // Adjust this value to match the button size\n  color: #000;\n\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n\nexport const StyledUnderline = styled(\"u\")`\n  color: #000;\n\n  font-size: 18px; // Adjust this value to match the button size\n  margin: 0;\n  font-weight: normal; // Adjust if needed to match the button\n`;\n","import {Col, Badge, Card, Tooltip} from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport {SeminarCardBlockType} from \"./types\";\nimport { Button } from \"../../common/Button\";\nimport { message } from \"antd\";\n\nimport {\n    ContentSection,\n    Content,\n    ContentWrapper,\n    StyledRow,\n    ButtonWrapper, StyledTitle, StyledContent, StyledUnderline, StyledAbstract\n} from \"./styles\";\n\nimport {useState} from \"react\";\n\nconst SeminarCardBlock = ({\n     content,\n     show_detail = true,\n}: SeminarCardBlockType) => {\n    const [showFullAbstract, setShowFullAbstract] = useState(false);\n\n    const toggleAbstract = () => {\n        setShowFullAbstract(!showFullAbstract);\n    };\n\n    const truncateText = (text: string, limit: number) => {\n        return text.length > limit ? text.substring(0, limit) + \"...\" : text;\n    };\n\n    const copyToClipboard = (text: string) => {\n        navigator.clipboard.writeText(text)\n            .then(() => {\n                message.success(\"Copied Meeting Link to Clipboard!\");\n            })\n            .catch(() => {\n                message.error(\"Failed to Copy!\");\n            });\n    };\n\n    return (\n\n        <Badge.Ribbon text={content.venue}>\n            <Card size=\"small\">\n\n                <StyledTitle style={{maxWidth: \"90%\"}}>{content.title}</StyledTitle>\n\n\n                <Tooltip placement=\"right\" color={\"#18216d\"} title={content.bio}\n                         overlayStyle={{maxWidth: \"900px\"}}  // Set the width or maxWidth\n                         showArrow={false}\n                >\n                    <StyledContent>\n\n                        {content.affiliation\n                            ? `${content.speaker} (${content.affiliation})`\n                            : content.speaker}\n                    </StyledContent>\n                </Tooltip>\n                <StyledContent>\n                    {(content.time + \", \" + content.date)}\n                </StyledContent>\n\n\n                {content.place && show_detail && (\n                    <div>\n                        <StyledContent>\n                            {(content.place)}\n                        </StyledContent>\n                    </div>\n\n                )}\n                {content.link && show_detail && (\n                    <div>\n                        <StyledAbstract>\n                            <a onClick={() => copyToClipboard(content.link)} style={{ cursor: \"pointer\", color: \"#18216d\", textDecoration: \"underline\" }}>\n                                Copy Link\n                            </a>\n                        </StyledAbstract>\n                    </div>\n                )}\n                <br/>\n                {!showFullAbstract && show_detail && (\n                    <div>\n                        <StyledAbstract>\n                            {\"Abstract: \" + truncateText(content.abstract, 200)}\n                        </StyledAbstract>\n                        <StyledUnderline onClick={() => toggleAbstract()}>{\"Find more...\"}</StyledUnderline>\n                    </div>\n                )\n                }\n                <StyledAbstract>\n                    {showFullAbstract && show_detail && (\n                        \"Abstract: \" + content.abstract)\n                    }\n                </StyledAbstract>\n            </Card>\n        </Badge.Ribbon>\n\n    );\n};\n\nexport default withTranslation()(SeminarCardBlock);\n","import {Col, Badge, Card, Tooltip} from \"antd\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { withTranslation } from \"react-i18next\";\nimport { SeminarListBlockType } from \"./types\";\nimport { useState } from \"react\";\nimport { Button } from \"../../common/Button\";\nimport {\n    ContentSection,\n    Content,\n    ContentWrapper,\n    StyledRow,\n    StyledTitle,\n    StyledContent,\n    StyledSmallTitle,\n} from \"./styles\";\nimport SeminarCardBlock from \"../SeminarCardBlock\";\n\nconst SeminarListBlock = ({\n                              upcoming_talks = [],\n                              completed_talks = [],\n                              t,\n                              id,\n                              direction,\n                              fade_direction,\n                          }: SeminarListBlockType) => {\n    const [visibleCount, setVisibleCount] = useState(10); // Show top 10 initially\n\n    const handleLoadMore = () => {\n        setVisibleCount(visibleCount + 10); // Show 10 more items on each click\n    };\n\n    return (\n        <ContentSection>\n            <Fade direction={fade_direction} triggerOnce>\n                <div>\n                    <StyledRow justify=\"space-between\" align=\"top\" id={id} direction={direction}>\n                        {/* Upcoming Talks */}\n                        <Col lg={12} md={12} sm={12} xs={24}>\n                            {upcoming_talks.length > 0 && (\n                                <StyledTitle>{t(\"Upcoming Talks\")}</StyledTitle>\n                            )}\n                            {upcoming_talks.map((talk, index) => (\n                                <ContentWrapper style={{ marginBottom: \"20px\" }} key={index}>\n                                    <SeminarCardBlock content={talk} show_detail={true} />\n                                </ContentWrapper>\n                            ))}\n                        </Col>\n\n                        {/* Previous Talks */}\n                        <Col lg={11} md={11} sm={11} xs={24}>\n                            <ContentWrapper>\n                                <StyledTitle>{t(\"Previous Talks\")}</StyledTitle>\n                                {completed_talks.slice(0, visibleCount).map((talk, index) => (\n                                    <ContentWrapper style={{ marginBottom: \"20px\" }} key={index}>\n                                        <Card size=\"small\">\n                                            <StyledSmallTitle style={{ maxWidth: \"90%\" }}>\n                                                {talk.title}\n                                            </StyledSmallTitle>\n                                            <Tooltip\n                                                placement=\"right\"\n                                                color={\"#18216d\"}\n                                                title={talk.bio}\n                                                overlayStyle={{ maxWidth: \"900px\" }}\n                                                showArrow={false}\n                                            >\n                                                <StyledContent>\n                                                    {talk.affiliation\n                                                        ? `${talk.speaker} (${talk.affiliation})`\n                                                        : talk.speaker}\n                                                </StyledContent>\n                                            </Tooltip>\n                                            <StyledContent>{talk.date}</StyledContent>\n                                        </Card>\n                                    </ContentWrapper>\n                                ))}\n                                {visibleCount < completed_talks.length && (\n                                    <Button\n                                        onClick={handleLoadMore}\n                                    >\n                                        Load More\n                                    </Button>\n                                )}\n                            </ContentWrapper>\n                        </Col>\n                    </StyledRow>\n                </div>\n            </Fade>\n        </ContentSection>\n    );\n};\n\nexport default withTranslation()(SeminarListBlock);\n","import { lazy } from \"react\";\nimport IntroContent from \"../../content/IntroContent.json\";\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\nimport PeopleContent from \"../../content/PeopleContent.json\";\nimport CardListBlock from \"../../components/CardListBlock\";\nimport SeminarHighlightBlock from \"../../components/SeminarHighlightBlock\";\nimport SeminarContent from \"../../content/SeminarContent.json\";\nimport PeopleListBlock from \"../../components/PeopleListBlock\";\nimport SeminarNextBlock from \"../../components/NextSeminarBlock\";\nimport SeminarListBlock from \"../../components/SeminarListBlock\";\nimport SeminarCardBlock from \"../../components/SeminarCardBlock\";\n\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\nconst Container = lazy(() => import(\"../../common/Container\"));\n// const ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\n\nconst Seminar = () => {\n    const today = new Date();\n    const parsedSeminars = SeminarContent.map((seminar) => {\n        const seminarDate = new Date(seminar.date);\n        return { ...seminar, seminarDate };\n    });\n\n\n\n    const upcoming_talks = parsedSeminars.filter((seminar) => seminar.seminarDate >= today);\n    const completed_talks = parsedSeminars.filter((seminar) => seminar.seminarDate < today);\n\n    const next_seminar = upcoming_talks.length > 0 ? upcoming_talks[0] : null;\n    // const next_seminar = completed_talks[0]\n    return (\n    <Container>\n\n      <ContentBlock\n        direction=\"right\"\n        title={\"Seminars\"}\n        content={\"LTL seminars are held every Thursday during term time, either in person at the English Faculty Building or online. Some in-person seminars may also offer a hybrid option for remote participation. We welcome attendees from the University and the wider public.\"}\n        button={[\n        ]}\n        icon=\"LTL-seminar-2.jpeg\"\n        id=\"home\"\n        fade_direction={\"up\"}\n      />\n\n        <SeminarNextBlock\n            title={\"Next Talk\"}\n            content={next_seminar}\n            id=\"seminar\"\n            instruction={\"Our seminars are held every Thursday from 11:00 AM to 12:00 PM during term time (unless otherwise specified). For more information about our talks, please visit our talks.cam page (talks.cam.ac.uk/show/index/60438).\"}\n            direction={\"left\"}\n            fade_direction={\"up\"}\n        />\n\n\n        <SeminarListBlock\n            upcoming_talks={upcoming_talks}\n            completed_talks={completed_talks}\n            id=\"seminar_list\"\n            direction={\"left\"}\n            fade_direction={\"up\"}\n        />\n\n    </Container>\n  );\n};\n\nexport default Seminar;\n"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","ButtonWrapper","_templateObject5","_templateObject6","_templateObject7","_templateObject8","StyledTitle","_templateObject9","StyledContent","_templateObject10","StyledAbstract","_templateObject11","StyledUnderline","_templateObject12","withTranslation","text","limit","title","content","instruction","t","button","id","fade_direction","_useState","useState","_useState2","_slicedToArray","showFullAbstract","setShowFullAbstract","_jsx","children","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","Badge","Ribbon","venue","Card","size","style","maxWidth","Tooltip","placement","color","bio","overlayStyle","showArrow","affiliation","concat","speaker","time","date","place","abstract","length","substring","onClick","link","Button","window","open","Result","icon","LoadingOutlined","StyledSmallTitle","_ref$show_detail","show_detail","navigator","clipboard","writeText","then","message","success","catch","error","cursor","textDecoration","_ref$upcoming_talks","upcoming_talks","_ref$completed_talks","completed_talks","visibleCount","setVisibleCount","map","talk","index","marginBottom","SeminarCardBlock","slice","Container","lazy","ContentBlock","today","Date","parsedSeminars","SeminarContent","seminar","seminarDate","_objectSpread","filter","next_seminar","SeminarNextBlock","SeminarListBlock"],"sourceRoot":""}